
console.log('backgroundaction');

var utils = function () {
    var a = chrome.app.getDetails(),
        f = a.version,
        c = a.id,
        b = chrome.i18n.getMessage("@@ui_locale");
    return {
        getURL: function (a) {
            return chrome.extension.getURL(a)
        },
        getPage: function (a) {
            return this.getURL("/content/" + a + ".html")
        },
        getFileURL: function (a) {
            return "filesystem:chrome-extension://" + c + "/persistent/" + a
        },
        getFavIconURL: function (a) {
            return "chrome://favicon/" + a
        },
        id: function () {
            return c
        },
        version: function () {
            return f
        },
        locale: function () {
            return b
        },
        get: function (a) {
            return localStorage[a]
        },
        set: function (a,
            d) {
            localStorage[a] = d
        },
        isFirstRun: function () {
            return void 0 == localStorage["general.firstRun"] || !localStorage["general.firstRun"] ? !0 : !1
        },
        isUpgradeRequired: function () {
            return parseInt(localStorage["general.version"]) < parseInt(f) ? !0 : !1
        }
    }
}()


// General Variable

var TimerTick = 10000;
var Timer4Json;
var Timer4Wireless;
var Timer4USB;
var Timer4Bluetooth;




// Start Load Source File
function loadResource(a, f) {
    try {
        var c = new XMLHttpRequest;
        c.open("GET", utils.getURL(a), !1);
        c.send();
        return "xml" == f ? c.responseXML : "text" == f ? c.responseText : JSON.parse(c.responseText)
    } catch (b) {
        console.log(b)
    }
}
// End Load Source File

// Start Load External Page 
function LoadPage(a){
 $('#Content').hide();
 $('#ExternalContent').show().load(a, function() {
	 if (self.lastMod) document.write(lastMod())
	 });
};
function LoadPageWindriver(a){
 $('#Content').hide();
 $('#ExternalContent').show().load(a, function() {
	 if (self.lastMod) document.write(lastMod())
	 	$('#ExternalContent .apply li a').each(function( index){
	 		console.log($(this).attr('href'));
	 		$(this).click(function(e){
	 			e.preventDefault();
	 			console.log('Apply clicked:' + $(this).attr('href'));
	 			//LoadPage($(this).attr('href'));
	 			//Zana Remove comment LoadPage when running on device

	 		});
	 	});
	 });
};
// End Load External Page 	

// Start Timer for wireless
function CheckWireless(){
	console.log('wireless check');
	// var status = loadResource("/content/config.json","text");
	// Zana Write your wireless check link and link response must be text (true or false)

	var status = 'true'; // Remove this
	if(status)
	{
		console.log('wireless check true');
		if(!$('#btn_wireless').hasClass('active'))
		{
			$('#btn_wireless').removeClass('passive');
			$('#btn_wireless').addClass('active');
		}
	}
	else
	{
		console.log('wireless check false');
		if($('#btn_wireless').hasClass('active'))
		{
			$('#btn_wireless').removeClass('active');
			$('#btn_wireless').addClass('passive');	
		}
	}

}
// End Timer for wireless

// Start Timer for bluetooth
function CheckBluetooth(){
	console.log('bluetooth check');
	// var status = loadResource("/content/config.json","text");
	// Zana Write your bluetooth check link and link response must be text (true or false)

	var status = 'true'; // Remove this
	if(status)
	{
		console.log('bluetooth check true');
		if(!$('#btn_bluetooth').hasClass('active'))
		{
			$('#btn_bluetooth').removeClass('passive');
			$('#btn_bluetooth').addClass('active');
		}
	}
	else
	{
		console.log('bluetooth check false');
		if($('#btn_bluetooth').hasClass('active'))
		{
			$('#btn_bluetooth').removeClass('active');
			$('#btn_bluetooth').addClass('passive');	
		}
	}

}
// End Timer for bluetooth

// Start Timer for usb
function CheckUSB(){
	console.log('usb check');
	// var status = loadResource("/content/config.json","text");
	// Zana Write your usb check link and link response must be text (true or false)

	var status = 'true'; // Remove this
	if(status)
	{
		console.log('usb check true');
		if(!$('#btn_usb').hasClass('active'))
		{
			$('#btn_usb').removeClass('passive');
			$('#btn_usb').addClass('active');
		}
	}
	else
	{
		console.log('usb check false');
		if($('#btn_usb').hasClass('active'))
		{
			$('#btn_usb').removeClass('active');
			$('#btn_usb').addClass('passive');	
		}
	}

}
// End Timer for bluetooth

// Zana  Start Windriver Page Buttons Set

function WindriverButtonSet(a)
{
	var HTMLOutput = loadResource(a,'text');
	$('#ExternalContent').html(HTMLOutput);

}

// Zana  Start Windriver Page Buttons Set

// Start Build Json Data 
function buildJSON(){
			// Config Link Load
		     var data = loadResource("/content/config.json","");
			
		    // Start Settings Menu Set 
			 var MenuListHTML = "";
			 $.each(data.SettingsMenu,function(key,val){
				
				MenuListHTML += "<li><a href="+val.Link+">"+val.Name+"</a></li>"
				
		     });
			 
			 $("#SettingsMenu").html(MenuListHTML);
			 // End Settings Menu Set 
			 
			 // Start Installed App  
			 var ItemsHTML = "";
			 var IndicatiorHTML = "";
			 var Linebreak = 5;
			 var ItemRow = 0;
			 var ItemCount = 0; 
			 
			 $.each(data.InstalledApp,function(key,val){
				
				if((ItemCount % Linebreak) == 0 )
				{
					if(ItemCount == 0)
					{
						ItemsHTML+='<div class="item active"><div class="row-fluid"><div class="col-xs-1 col-sm-1 col-md-1 col-lg-1"></div>';	
						IndicatiorHTML += '<li data-target="#InstalltedAppsCarousel" data-slide-to='+ItemRow+' class="active"></li>';
					}
					else
					{
						ItemsHTML+='<div class="col-xs-1 col-sm-1 col-md-1 col-lg-1"></div></div></div><div class="item"><div class="row-fluid"><div class="col-xs-1 col-sm-1 col-md-1 col-lg-1"></div>';
						IndicatiorHTML += '<li data-target="#InstalltedAppsCarousel" data-slide-to='+ItemRow+'></li>';

					}
					ItemsHTML+= '<div class="col-xs-12 col-sm-2 col-md-2 col-lg-2"><a href="'+val.Link+'" class="thumbnail"><img src="'+val.Icon+'"  alt="Image" style="max-width:100%;" /> <p>'+val.Name+'</p></a></div>';
					ItemRow++;

				}
				else
				{
					ItemsHTML+= '<div class="col-xs-12 col-sm-2 col-md-2 col-lg-2"><a href="'+val.Link+'" class="thumbnail"><img src="'+val.Icon+'" alt="Image" style="max-width:100%;" /> <p>'+val.Name+'</p></a></div>';
				}
				ItemCount++;
				
		     });

			 if(ItemRow == 1)
			 {
			 	$('#InstalltedAppsIndicators,#InstalledAppsNavLeft,#InstalledAppsNavRight').hide();
			 }
			 $('#InstalltedAppsIndicators').html(IndicatiorHTML);
			 $("#InstalltedAppsInner").html(ItemsHTML);
			 $('#InstalltedAppsCarousel').carousel({interval: false });
			 // End Installed App 

			 // Start Market App  
			 ItemsHTML = "";
			 IndicatiorHTML = "";
			 Linebreak = 5;
			 ItemRow = 0;
			 ItemCount = 0;
			 
			 $.each(data.MarketApp,function(key,val){
				
				if((ItemCount % Linebreak) == 0 )
				{
					if(ItemCount == 0)
					{
						ItemsHTML+='<div class="item active"><div class="row-fluid">';	
						IndicatiorHTML += '<li data-target="#MarketAppsCarousel" data-slide-to='+ItemRow+' class="active"></li>';
					}
					else
					{
						ItemsHTML+='</div></div><div class="item"><div class="row-fluid">';
						IndicatiorHTML += '<li data-target="#MarketAppsCarousel" data-slide-to='+ItemRow+'></li>';

					}
					ItemsHTML+= '<div class="col-xs-12 col-sm-3 col-md-3 col-lg-3"><a href="'+val.Link+'" class="thumbnail"><img src="'+val.Icon+'"  alt="Image" style="max-width:100%;" /> <p>'+val.Name+'</p></a></div>';
					ItemRow++;

				}
				else
				{
					ItemsHTML+= '<div class="col-xs-12 col-sm-3 col-md-3 col-lg-3"><a href="'+val.Link+'" class="thumbnail"><img src="'+val.Icon+'"  alt="Image" style="max-width:100%;" /> <p>'+val.Name+'</p></a></div>';
					
				}
				ItemCount++;
				
		     });

			 if(ItemRow == 1)
			 {
			 	$('#MarketAppsIndicators,#MarketAppsNavLeft,#MarketAppsNavRight').hide();
			 }
			 $('#MarketAppsIndicators').html(IndicatiorHTML);
			 $("#MarketAppsInner").html(ItemsHTML);
			 $('#MarketAppsCarousel').carousel({ interval: false });
			 // End Market App
}
// End Build Json DAta


	$(document).ready(function(e) {


		     buildJSON();
		      
            // Start Timers

            Timer4Json = setInterval(function(){buildJSON()},TimerTick);
            Timer4Wireless = setInterval(function(){CheckWireless()},TimerTick);
            Timer4Bluetooth = setInterval(function(){CheckBluetooth},TimerTick);
            Timer4USB = setInterval(function(){CheckUSB()},TimerTick);

            // End Timers


			//Start General Events
			$('#MenuTabs').tab();

			//End General Events

			// Start Settings Menu click event
            $('#SettingsMenu a').click(function(e){
            	e.preventDefault();
            	LoadPageWindriver($(this).attr('href'));
            });
            // End Settings Menu click event


			
			// Start Left Menu click event 
			$('#TabHome,#TabMarket').click(function(){
				$('#ExternalContent').hide();
				$('#Content').show();
			});
			// End Left Menu click event 


			//Start Wireless Click
			$('#btn_wireless').click(function(){
				console.log('wireless click')
				if($(this).find('span').hasClass('active'))// Zana Bluetooth Active to passive
				{
					// Zana post to  passive data with loadResource(link,'text')
					$(this).find('span').removeClass('active');
					$(this).find('span').addClass('passive');	
				}
				else // Zana Bluetooth Passive to active
				{
					// Zana post to  active data with loadResource(link,'text')
					$(this).find('span').removeClass('passive');
					$(this).find('span').addClass('active');
				}
				
			});
			//End Wireless Click

			//Start Bluetooth Click
			$('#btn_bluetooth').click(function(){
				if($(this).find('span').hasClass('active')) // Zana Bluetooth Active to passive
				{
					// Zana post to  passive data with loadResource(link,'text')
					$(this).find('span').removeClass('active');
					$(this).find('span').addClass('passive');	
				}
				else // Zana Bluetooth Passive to active
				{
					// Zana post to  active data with loadResource(link,'text')
					$(this).find('span').removeClass('passive');
					$(this).find('span').addClass('active');
				}
				
			});
			//End Bluetooth Click

			//Start USB Click
			$('#btn_usb').click(function(){
				if($(this).find('span').hasClass('active')) // Zana Bluetooth Active to passive
				{
					// Zana post to  passive data with loadResource(link,'text')
					$(this).find('span').removeClass('active');
					$(this).find('span').addClass('passive');	
				}
				else // Zana Bluetooth Passive to active
				{
					// Zana post to  active data with loadResource(link,'text')
					$(this).find('span').removeClass('passive');
					$(this).find('span').addClass('active');
				}
				
			});
			//End USB Click
			
        });
			